version: '3.7'
services:

    # Note: Container Names are automatically available as 'host names' (as in networking http://host:port)
    # Networked service-to-service communication use the CONTAINER_PORT in [host]:[container] pairs below.

    # Theoretically it should have been possible to let mongo run internally on 27017 (it's default) and then expose it
    # to the outside as 27016, but I never could get that to work, so I'm just setting it up to run at 27016 both
    # internaly and externally
    #
    # NOTE: Minimal requirements for the mongod.conf is to have the port set as 27016, and the data db set
    mongo-dev: 
        container_name: mongo-dev 
        # WARNING: volumes will not handle '~' character for home folder. Do not use.
        volumes:
            - '${MONGO_BASE}/mongodb-data-dev:/data/db'
            - '${MONGO_BASE}/mongo-dumps-dev:/mongo-dumps'
            - '${MONGO_BASE}/mongo-scripts-dev:/mongo-scripts'
            - '${SECRETS}/mongod--localhost-dev.conf:/etc/mongod.conf'
        command: mongod --config /etc/mongod.conf
        #entrypoint: ["mongod","--config","/etc/mongod.conf"]
        ports:
            - '27016:27016'
        env_file: 
            - '${SECRETS}/mongo.env'
        networks:
           - net-dev
        # Always specify version of mongo. When it upgrades automatically there can be database issues that need to be resolved
        # and we don't want that happening unexpectedly
        image: mongo:4.0

    # https://hub.docker.com/r/ipfs/go-ipfs/
    ipfs-dev: 
        container_name: ipfs-dev 
        environment:
            # IPFS_PROFILE options (lowpower | server)
            routing: "dhtclient" 
            IPFS_PROFILE: "lowpower" 
            IPFS_PATH: "/data/ipfs"
            # LIBP2P_FORCE_PNET: 1
        # expose:
        #    - '4001'
        #     - '8081'
        #    - '5001'
        # WARNING: volumes will not handle '~' character for home folder. Do not use.
        volumes:
            - '${ipfs_staging}:/export'
            - '${ipfs_data}:/data/ipfs'
        # ports:
            # - "4001:4001"
            # - "127.0.0.1:8081:8080"
            # - "5001:5001"
        networks:
            - net-dev
        image: ipfs/go-ipfs:v0.7.0

    quanta-dev:
        build: 
            context: .
            dockerfile: ./dockerfile-dev
        container_name: quanta-dev
        expose:
            - '8182'
            - '8000'
        volumes:
            - '${QUANTA_BASE}/tmp:/tmp'
            - '${QUANTA_BASE}/log:/log'
            - '${QUANTA_BASE}/config:/config'
            - '${QUANTA_BASE}/lucene:/subnode-lucene'
            - '${PRJROOT}/src/main/resources/public:/dev-resource-base'
            - '${PRJROOT}/target/classes:/loader-path'

            # This maps '/app' to be the current folder where you run docker from (where the yaml file is normally)
            - $PWD:/app
        ports:
            # '[host]:[container]'
            - '8182:8182'
            - '8000:8000'
        networks:
            - net-dev
        environment:

            # Can be a comma-delimited list of TestIntf-derived tests to run
            # examples are "MongoTest,IPFSTest"
            runTests: 
            
            mongoAdminPassword: "${subnodePassword}"
            mongoSecurity: "true"

            # NOTE: '>-' removes all newline characters and makes one long string
            # Using '|' there instead would preserve the newlines after read in
            # The '-' after either of those removes any trailing newline
            testUserAccounts: >- 
                adam:${testPassword}:${devEmail},
                bob:${testPassword}:${devEmail},
                cory:${testPassword}:${devEmail},
                dan:${testPassword}:${devEmail}

            spring.config.location: "classpath:/application.properties" 
            mongodb.host: "mongo-dev" 
            mongodb.port: "27016" 
            profileName: "dev" 
            server.port: "8182" 
            httpProtocol: "http" 
            metaHost: "localhost" 
            reSaveAll: "false"
            forceIndexRebuild: "false"
            allowFileSystemSearch: "false"
            actPubEnabled: "false" 
            spring.http.multipart.max-file-size: "200MB" 
            spring.http.multipart.max-request-size: "200MB" 
            spring.servlet.multipart.max-file-size: "200MB"
            spring.servlet.multipart.max-request-size: "200MB"
            adminDataFolder: "/tmp" 
            mail.port: ""
            mail.user: "postmaster@quantizr.com" 
            mail.password: "${emailPassword}" 
            mail.host: "smtp.mailgun.org" 
            mail.from: "admin@quanta.wiki"
            JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,address=0.0.0.0:8000,server=y,suspend=n"
            ipfs.host: "http://ipfs-dev"
            ipfs.apiPort: "5001"
            ipfs.gatewayPort: "8080"
            # This is the node name for a feed like this: http://localhost:8182/multiRss?id=:podcast-set to cause that feed to precache
            rssAggregatePreCacheNodeId_XX: ":podcast-set"
        image: quanta-dev
        depends_on:
            - mongo-dev
            - ipfs-dev

# https://docs.docker.com/compose/networking/

networks:
  net-dev:
    driver: bridge
    external: false
    name: net-dev

# If you're starting mongo in a separate yaml (docker-cokmpose-dev-mongo.yaml) then use this as your 'network' setup.
# networks:
#   net-dev:
#     external:
#       name: net-dev
