@import "variables.scss";

$profileImgSize: 200px;
$highlightActiveMenuItems: false;

$border-radius: 6px;
$border-radius-large: 10px;

$input-bg: $gray-700;
$input-color: white;
$input-color-placeholder: #999;

$mobileHeaderBarHeight: 4.5rem;

$baseBgColor: black; // rgb(32, 34, 36);
$body-bg: black; // darken($baseBgColor, 7%);
$body-color: white;
$font-size-base: 1rem !default;
// $fontSize: 120%;

$disabled-body-color: gray; //darken($body-color, 90%);

// This gives us awesome large checkboxes and radio buttons!!
$custom-control-indicator-size: 1.75rem;

@import "../node_modules/bootstrap/scss/bootstrap";

@import "bootswatch.scss";

// Removed custom fonts, because I need emojis to look good
$fontFamily: 'QuantaCustomFont', 'Roboto', 'Verdana', 'Helvetica', 'Arial', 'sans-serif';

//This does work (border around focused edit fields) but we don't need it.
// .form-control:focus {
//     border-color: green;
//     box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(255, 0, 0, 0.6);
// }

@import "click-effect.scss";

* {
    outline: none;
}

$menuItemHoverBackgroundColor: $primary;
$nodeBorderBottomColor: $gray-700;

$createdByMeBackgroundColor: green;
$createdByMeTextColor: white;

$createdByAnotherBackgroundColor: $gray-700;
$createdByAnotherTextColor: white;

$listBackgroundColor: lightGray;

$smallGap: 12px;
$bigGap: 24px;
$tinyGap: 8px;
$microGap: 4px;

$smallerFont: 80%;

$lightenRowFactor: 5;

$fatBorderSize: 8px;
$mediumBorderSize: 6px;
$highlightBorderSize: 8px;
$smallBorderSize: 3px;

$mobileHeaderHeight: 3.5rem;

@font-face {
    font-family: "QuantaCustomFont";
    src: url('../fonts/Roboto-Light.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
}

@import 'scrollbar.scss';
@import 'nav.scss';
@import 'menu.scss';
@import 'checkbox.scss';
@import 'list.scss';
@import 'button.scss';
@import 'dropzone.scss';
@import 'breadcrumbs.scss';
@import 'media-queries.scss';
@import 'feed.scss';
@import 'rss.scss';
@import 'profile.scss';
@import 'openGraph.scss';
@import 'nodeItem.scss';

body {
    font-family: "QuantaCustomFont" !important;
}

.alert {
    // these sizes are half the default for bootstrap
    padding: .5rem;
    margin-bottom: .5rem;
}

.mfsFileView {
    margin: $smallGap;
}

.textTypeContent {
    margin: 12px 0px 12px 12px;
    padding: 8px;
    border: 1px solid $nodeBorderBottomColor;
    background-color: #17202A;
}

.preWordWrap {
    // overflow-x: auto; //<--- highly upvoted stack overflow didn't have this.
    white-space: pre-wrap;
    white-space: -moz-pre-wrap;
    white-space: -pre-wrap;
    white-space: -o-pre-wrap;
    word-wrap: break-word;
}

.markdown-content table,
th,
td {
    border: 1px solid $nodeBorderBottomColor;
    border-collapse: collapse;
}

.markdown-content th,
td {
    padding: $tinyGap;
}

.serverInfoText {
    width: 100%;
    overflow: auto;
}

.mobileHeaderBar {
    padding: 10px;
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100%;
    background-color: $nodeBorderBottomColor;
    border-bottom: 1px solid gray;
    height: $mobileHeaderBarHeight;
}

.displayNameTextField {
    max-width: 40rem;
}

.helpPanel {
    margin-top: 10px;
    margin-bottom: 10px;
    border: 1px solid gray;
    padding-top: $smallGap;
    padding-left: $smallGap;
    padding-right: $smallGap;
    border-radius: $border-radius;
}

.mainAppRow {
    margin-left: 0px !important;
    margin-right: 0px !important;
    height: 100vh;
}

.signupLinkText {
    cursor: pointer;
    margin-bottom: 16px;
}

.signupLinkTextMobile {
    display: inline-block;
    margin-top: 16px;
    cursor: pointer;
}

.fullScreenToolbar {
    z-index: 2147483501;
    position: fixed;
    top: 0;
    right: 0;
    margin: 10px;
}

.calcOutputArea {
    font-family: Courier New, Courier, Lucida Sans Typewriter, Lucida Typewriter, monospace;
    font-size: 120%;
    margin-left: $smallGap;
    max-height: 600px;
    overflow-y: auto;
}

.statsWord {
    padding-left: 8px;
    padding-right: 8px;
    margin-right: $smallGap;
    display: inline-block;
    cursor: pointer;
    font-size: x-large;
    border-radius: $border-radius;
}

.statsWord:hover {
    background-color: $primary;
}

.statsWordMobile {
    @extend .statsWord;
    padding: 8px;
}

.wordStatsArea {
    border: 1px solid $nodeBorderBottomColor;
    padding: $smallGap;
    margin-bottom: $smallGap;
    max-height: 200px;
    overflow-y: auto;
    border-radius: $border-radius;
    background-color: $baseBgColor;
}

.trendingWordStatsArea {
    border: 2px solid $nodeBorderBottomColor;
    padding: $smallGap;
    margin-bottom: $smallGap;
    border-radius: $border-radius;
    background-color: $baseBgColor;
    padding: 12px;
}

.d3Graph {
    // margin: 2em;
    // border: 1px solid gray;
}

.d3PieChart {
    width: 250px;
    height: 250px;
}

// HTML comming from Mastodon includes this so tolerate if for now.
.invisible {
    display: none;
    visibility: hidden !important;
}

// for some reason, 'visibility: hidden' isn't working, but 'opacity' does work. I'll just leave both, it works.
.comp-hidden {
    opacity: 0;
}

.visible {
    display: inline-block;
    visibility: visible !important;
}

/* Need a way that we can set font sizes, on anchors but this actually messes up button styling because my buttons
are sometimes using anchorz inside them like the main landing page button which enlarges when clicked if these font size
alterations exist */
a:visited {
    color: #00bc8c !important;
    font-weight: bold;
    cursor: pointer;
    //font-size: 110%;
}

a:active {
    color: #00bc8c !important;
    font-weight: bold;
    cursor: pointer;
    //font-size: 110%;
}

a {
    color: #00bc8c !important;
    font-weight: bold;
    cursor: pointer;
    //font-size: 110%;
}

.welcomeBackground {
    //This 100 and auto makes the image fill horizontally but not alter it's aspect ratio

    //background-size:100% 100%;
    height: 100vh;
    max-width: 100% !important;
    min-height: 100vh !important;
}

.mediaStreamInputOption {
    width: 30rem;
}

.myFooterText {
    font-size: 80%;
}

.footerLink {
    margin-right: $smallGap;
    cursor: pointer;
}

.mainLogoImg {
    /* this margin and display is for making the logo horizontally centered */
    margin: auto;
    display: block;
}

.infoBlock {
    margin-bottom: 2rem;
    //padding-right: 2em;
}

.welcome-container-with-navbar {
    margin-top: 4rem;
}

.welcome-container-no-navbar {
    margin-top: 20px;
}

.navbar {
    margin-bottom: 0px;
}

.navbar-font {
    font-size: 1.4rem;
    font-weight: 400;
}

.smallLogoButton {
    border: 2px solid lightgray;
    cursor: pointer;
    border-radius: 4px;
    padding: 5px;
    background-color: black;
}

.leftNavLogoImg {
    border: 2px solid lightgray;
    cursor: pointer;
    border-radius: 4px;
    padding: 5px;
}

.logo-text {
    cursor: pointer;
    font-size: 1.5rem;
    font-weight: 600;
    margin-left: 10px;
    margin-right: 15px;
    vertical-align: middle;
    color: var(--bs-green);
}

.newMessagesNote {
    cursor: pointer;
    padding: 2px 6px 2px 6px;
    color: var(--bs-green);
    border: 2px solid var(--bs-green);
    border-radius: 12px;
}

.app-body {
    background-color: $body-bg;
    font-family: $fontFamily !important;
    // font-size: $fontSize;
    width: 100%;
    height: 100%;
}

.highlightBorder {
    border: 1px solid green;
}

.binary-link {
    border-top: 1px dotted $nodeBorderBottomColor;
    padding-top: $smallGap;
    margin-left: $smallGap;
    margin-bottom: $smallGap;
}

.normalText {
    font-weight: normal;
}

.avatarImage {
    max-width: 48px;
    max-height: 80px;
    cursor: pointer;
    margin-bottom: $tinyGap;
    border: 1px solid gray;
    border-radius: $border-radius;
}

.resultsContentHeading {
    font-size: 120%;
    padding: 10px;
    margin-bottom: 10px;
    margin-top: 10px;
    border-radius: $border-radius;
}

.logViewTitle {
    margin-bottom: 10px;
}

.trendingSectionTitle {
    margin-bottom: 10px;
    padding-bottom: 10px;
}

.headerImageRHS {
    cursor: pointer;
    width: 100%;
    object-fit: cover;
    border: 2px solid $nodeBorderBottomColor;
    min-height: 60px;
    border-radius: $border-radius;
    max-height: 200px;
}

.rhsMenu {
    width: 60%;
    padding-left: 0px;
}

.rhsMenuMobile {
    width: 85%;
}

.userName {
    font-weight: bold;
}

.userNameInContent {
    font-weight: bold;
}

.rhsUserName {
    // top: -40px;
    // left: 30px;
    // position: relative;
}

.friendLhs {
    width: 25%;
}

.friendRhs {
    width: 75%;
}

/* it's a bit ugly that we have to style the icon differently based on if it's on a list view or the main tree */
.listFriendImage {
    max-width: 70px;
    cursor: pointer;
    border: 2px solid $nodeBorderBottomColor;
    border-radius: $border-radius;
}

/* This is how the search terms get highlighted by wrapping them like this in 
the markdown **_term_** */
strong em {
    font-style: normal;
    font-weight: bold;
    background-color: green;
}

.width-7rem {
    width: 7rem;
}

.textfield-label {
    margin-bottom: 0px;
}

.form-group-border {
    border: 1px solid $gray-600;
    border-radius: $border-radius;
}

.edit-props-table {
    margin-top: $smallGap;
    margin-bottom: $smallGap;
    padding: $smallGap;
    width: 100%;
}

.fixedFont {
    font-family: 'Courier New', Courier, monospace;
}

.file-link {
    margin-top: $smallGap;
    margin-left: $smallGap;
    font-family: 'Courier New', Courier, monospace;
    font-weight: bold;
}

.splitNodeRadioButtonGroup {
    padding: $smallGap;
    margin-bottom: $smallGap;
}

.histPanelExpanded {
    margin-top: 35px;
    margin-left: $smallGap;
}

.histPanelCollapsed {
    margin-top: 35px;
    margin-left: $smallGap;
}

.propsPanelExpanded {
    // margin-top: $smallGap;
    // margin-bottom: $smallGap;
}

.propsPanelCollapsed {
    // margin-top: $smallGap;
    // margin-bottom: $smallGap;
}

.collapse-panel-link {
    margin: $smallGap;
    cursor: pointer;
}

.folder-link {
    margin-top: $smallGap;
    margin-left: $smallGap;
    font-family: 'Courier New', Courier, monospace;
    font-weight: bold;
}

.dlgContainer {
    display: none;
}

.progressSpinner {
    width: 5rem;
    margin: 0 auto;
}

.overlay {
    z-index: 2147483500;
    background-color: rgba(1, 1, 1, 0.1);
    bottom: 0;
    left: 0;
    position: fixed;
    right: 0;
    top: 0;
    cursor: progress;
    display: none;
}

.extraPagingComps {
    margin: 0px 0px 4px 0px;
    display: inline-block;
}

.logoutLink {
    margin-left: $smallGap;
    margin-top: $smallGap
}

.signatureIcon {
    color: yellow;
    margin-right: $smallGap;
}

.ogBookmarkIcon {
    cursor: pointer;
    margin-left: 8px;
}

.app-modal-title {
    margin-bottom: .7rem;
    font-size: 130%;

    // This makes a nice title bar, but I just like the cleaner look without.
    // border: 1px solid gray;
    // background-color: $primary;
    // border-radius: $border-radius;
    // padding: 4px 10px 4px 10px;
    padding-left: 4px;
}

.app-modal-title-close-icon {
    cursor: pointer;
}

.app-modal {
    position: fixed;
    z-index: 16000000;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.6);
}

/* Modal Content/ Dialog Box. This is the outter frame of the dialog itself */

.app-embed-content {
    background-color: $modal-content-bg;
    border: 2px solid gray;
    border-radius: $border-radius;
    padding: 14px;
    width: 100%;
    margin-bottom: 10px;
    margin-top: 12px;
}

.app-modal-content {
    background-color: $modal-content-bg;
    border: 2px solid gray;
    margin: $smallGap auto;
    padding: 14px;
    width: 75%;
    max-width: 800px;
    border-radius: $border-radius;
}

.app-modal-content-tiny-width {
    @extend .app-modal-content;
    max-width: 350px;
}

.app-modal-content-narrow-width {
    @extend .app-modal-content;
    max-width: 500px;
}

.app-modal-content-medium-width {
    @extend .app-modal-content;
    max-width: 650px;
}

/* I was getting a crazy render flicker where the browser was apparently toggling scrollbar off and on 10 times per second
it looked like and this wild ass guess at using 95% instead of 100% here as a fix solved the problem. 
Will come back later and study this more. todo-1 */
.videoContainer {
    width: 98%;
}

.videoPlayerElement {
    display: block;
    width: 75%;
    border: 2px solid gray;
    border-radius: $border-radius;
    margin: 0 auto;
}

.app-modal-content-fullscreen {
    background-color: $modal-content-bg;
    padding: $smallGap;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    top: 0;
    overflow: auto;
}

/* Max-width of 18em allows most of the page to the right to be clicked on to dismiss the menu */
.app-modal-main-menu {
    border: 2px solid $modal-content-border-color;
    background-color: $modal-content-bg;
    padding: $smallGap;
    width: 85%;
    max-width: 50rem;
}

/* Modal Content/ Dialog Box */

.app-modal-menu {
    border: 2px solid $modal-content-border-color;
    left: 0;
    top: 0;
    padding: 0px;
    width: 20%;
    margin-top: 60px;
    margin-left: $smallGap;
    margin-right: $smallGap;
    margin-bottom: $smallGap;
    max-width: 400px;
    min-width: 350px;
    background-color: $modal-content-bg;
}

.app-modal-nav-panel {
    border: 2px solid $modal-content-border-color;
    left: 0;
    top: 0;
    padding: 0px;
    width: 60%;
    margin-top: 60px;
    margin-left: $smallGap;
    margin-right: $smallGap;
    margin-bottom: $smallGap;
    max-width: 500px;
    min-width: 350px;
    background-color: $modal-content-bg;
}

.mainContainer {
    padding: 0px;
}

.mainContainerMobile {
    padding: 0px;
    font-size: 1.2rem;
}

.rightNavPanel {
    padding-top: 15px;
    padding-left: 0px;
    height: 100%;
    overflow-y: scroll;
    padding-bottom: 40px;
}

.leftNavPanel {
    height: 100%;
    overflow-y: scroll;
    padding-top: 12px;
    padding-bottom: 20px;
}

.tabPanelHeader {
    background-color: $primary ;
}

.tabSubOptions {
    margin-left: 2rem;
    margin-top: .5rem;
    margin-bottom: .8rem;
}

.tabSubOptionsItem {
    cursor: pointer;
    margin-bottom: 6px;
}

.tabSubOptionsItemMobile {
    cursor: pointer;
    margin-bottom: 6px;
    padding: 12px;
}

.tab-buttons-container {
    margin-bottom: 8px;
}

.rightNavPanelInner {
    min-width: 15rem;
    margin-left: 10px;
}

.scrollY {
    overflow-y: scroll;
    overflow-x: hidden;
}

.scrollBorder {
    border: 1px solid gray;
}

// Tip: It's best practice to have overflow:hidden, on all 
// parent divs that are the 'same size' or same screen rectangle
// to prevent any 'double scroll' bars showing up.
.my-tab-pane {
    width: 100%;
    height: 100%;
    overflow-y: scroll;
    overflow-x: hidden;
    padding-right: 15px;
}

.my-tab-pane-mobile {
    @extend .my-tab-pane;
    padding: 0px !important;
}

// This padding is what makes room for the '+' buttons to the right of the rows during editing
.my-tab-pane-editmode {
    padding-right: 50px;
}

.tabPanel {
    height: 100%;
    padding-left: 0px;
    padding-right: 0px;
}

.tabPanelMobile {
    height: 100%;
    padding-left: 0px;
    padding-right: 0px;
    padding-top: $mobileHeaderBarHeight;
}

.tab-content {
    margin: 0px;
    padding: 0px;
    height: 100%;

    // important to have 'hidden' to avoid a double scroll bar when this is NOT the thing we're scrolling
    overflow: hidden;
}

.ipfsCidText {
    cursor: pointer;
}

.ipfs-text {
    margin: $smallGap;
    padding: 5px;
}

.small-margin-right {
    margin-right: 8px;
}

.edit-prop-checkbox-col {
    width: 50px;
    display: table-cell;
    margin-left: 16px;
}

.edit-prop-textfield-col {
    display: table-cell;
}

/* I experimented with limiting height of rows and allowing individual scrolling on nodes but
   i think usability and asthetics make this slightly awkward. You can simply uncomment these styles
   and look, any time, to remember what that looks like. The style is in place in the code
   */

.tallTextContent {
    max-height: 650px;
}

.cryptoKeyTextContent {
    max-height: 300px;
    border: 1px solid $gray-700;
    padding: 1rem;
}

.selectKeyTypeDropDown {
    margin-bottom: 12px;
    max-width: 20rem;
}

.centeredTitle {
    width: 500px;
    /* This margin trick causes horizontal centering */
    margin: 0 auto;
}

.list-group-menu-item {
    background-color: transparent;
    padding: 5px 5px 5px 10px;
}

.list-group-transparent {
    background-color: transparent;
    padding: 5px 5px 5px 10px;
}

.audioPlayer {
    width: 100%;
    padding: 0px;
    margin-top: 0px;
    margin-left: 0px;
    margin-right: 0px;
    margin-bottom: 10px;
}

.marginLeftIfNotFirst {
    margin-left: $smallGap;
}

.marginLeftIfNotFirst:first-child {
    margin-left: 0;
}

.marginLeft {
    margin-left: $smallGap;
}

.marginRight {
    margin-right: $smallGap;
}

.img-block {
    margin-top: 12px;
    margin-right: 12px;
    margin-bottom: 12px;
    display: block;
    border: 1px solid $gray-700;
    border-radius: $border-radius;
}

.img-upper-left {
    margin-right: 24px;
    margin-bottom: 12px;
    float: left !important;
    border: 1px solid $gray-700;
    vertical-align: top;
    border-radius: $border-radius;
}

.img-upper-right {
    margin-left: 24px;
    margin-bottom: 12px;
    float: right !important;
    border: 1px solid $gray-700;
    vertical-align: top;
    border-radius: $border-radius;
}

.img-center-top {
    display: block;
    margin-left: auto;
    margin-right: auto;
    border: 1px solid $gray-700;
    border-radius: $border-radius;
}

.microMarginTop {
    margin-top: $microGap;
}

.microMarginBottom {
    margin-bottom: $microGap;
}

.microMarginRight {
    margin-right: $microGap;
}

.marginTop {
    margin-top: $smallGap;
}

.smallMarginBottom {
    margin-bottom: $tinyGap;
}

.bigMarginBottom {
    margin-bottom: $bigGap;
}

.bigMarginRight {
    margin-right: $bigGap;
}

.bigPaddingRight {
    padding-right: $bigGap;
}

.bigMarginTop {
    margin-top: $bigGap;
}

.bigMarginLeft {
    margin-left: $bigGap;
}

.bigMargin {
    margin: $bigGap;
}

.linkDisplay {
    display: inline-block;
    margin-bottom: $smallGap;
    margin-left: 20px;
    cursor: pointer;
    padding: 6px;
    border: 1px solid olivedrab;
    border-radius: $border-radius;
}

.microMarginTop {
    margin-top: $microGap;
}

.marginBottom {
    margin-bottom: $smallGap;
}

.marginBottomIfNotLast {
    &:not(:last-child) {
        margin-bottom: $smallGap;
    }
}

.marginAll {
    margin: $smallGap;
}

.microMarginAll {
    margin: $microGap;
}

.tinyMarginAll {
    margin: $tinyGap;
}

.tinyMarginTop {
    margin-top: $tinyGap;
}

.tinyMarginBottom {
    margin-bottom: $tinyGap;
}

.small-padding {
    margin-top: 7px;
    padding: 4px;
}

.horizontalLayout {
    // flex will layout things all on the same horizontal row
    display: flex;
}

.quickEditIcon {
    cursor: pointer;
    color: $nodeBorderBottomColor;
}

/* 
&#x25B2; ▲
&#x25B6; ▶
&#x25BC; ▼
&#x25C0; ◀
*/
.icon-up:after {
    content: "\25B2";
}

.icon-down:after {
    content: "\25BC";
}

.textarea-min-4 {
    font-family: inherit;
    min-height: 4rem;
}

.font-inherit {
    font-family: inherit;
    // min-height: 10em;
    // max-height: 60em;
}

.markdown-codespan {
    color: var(--bs-green);
    word-wrap: break-word;
    // font-family: var(--bs-font-monospace)
    // font-weight: bold;

    // I saw these in browser elements view but not sure if we need them.
    // direction: ltr /* rtl:ignore */;
    // unicode-bidi: bidi-override;
}

.pre-textarea {
    //WARNING: Setting a font family here (other than inherit) causes noticeable flicker whenever react re-renders (during focus and blur eventing), 
    //but the solution appeared to be to set the font on the PARENT div of an input control (to monospace), and then use 'inherit' here as the actual font-family.
    font-family: inherit;
    background-color: #1b2631 !important;
    border-radius: 0px !important;
    border: 1px solid gray;
}

.pre-textfield {
    //WARNING: Setting a font family here (other than inherit) causes noticeable flicker whenever react re-renders (during focus and blur eventing), 
    //but the solution appeared to be to set the font on the PARENT div of an input control (to monospace), and then use 'inherit' here as the actual font-family.
    padding: 3px 3px 3px 10px;
    font-family: inherit;
    border-radius: 0px !important;
    border: 1px solid gray;
}

.formSelect {
    border: 1px solid gray !important;
    padding: 3px 3px 3px 10px;
}

.tagIndent {
    margin-left: 2rem;
}

.textfield {
    margin-bottom: $smallGap;
}

/* We use a tiny gap for password text fields so that the 'Show Password" button can be very close below */
.passwordTextField {
    margin-bottom: $tinyGap;
}

.rowIcon {
    margin-left: 10px;
    margin-right: 6px;
    vertical-align: middle;
    cursor: pointer;
}

.rowTypeIcon {
    vertical-align: middle;
    border: 2px solid gray;
    padding: 6px;
    border-radius: $border-radius;
    cursor: pointer;
    margin-right: $tinyGap;
    margin-bottom: 4px;
}

.rowTypeName {
    vertical-align: middle;
    margin-left: 6px;
}

.passwordEyeIcon {
    cursor: pointer;
    margin-left: 10px;
}

.bash-script {
    margin-left: 1rem;
    margin-top: 1rem;
}

.markdown-content {
    padding-top: .5rem;
    padding-left: 1.2rem;
    padding-bottom: .5rem;
    padding-right: 1rem;
}

// These borders make the hash-created titles (like '### Title') look really attractive, but it looks ugly 
// when there's a single line title in the root node which itself has a border (and must for clarity as the root node)
// so for now let's not do these unless/until we find a better way to indicate to user clearly that the root node
// is a very special one relative to the page.
//
// .markdown-content h1 {
//     border-bottom: 4px solid $gray-700;
// }

// .markdown-content h2 {
//     border-bottom: 3px solid $gray-700;
// }

// .markdown-content h3 {
//     border-bottom: 2px solid $gray-700;
// }

// .markdown-content h4 {
//     border-bottom: 1px solid $gray-700;
// }

// .markdown-content h5 {
//     // border-bottom: 1px solid $gray-700;
// }

// .markdown-content h6 {
//     // border-bottom: 1px solid $gray-700;
// }

// without this any multi-paragraph text that our markdown renders always has too much spacing at the bottom. We already specify the
// amount of spacing we want in the markdown-content style itself so we stop this from messing that up with this 'last-child' style
.markdown-content p:last-child {
    margin-bottom: 0px;
}

// Note: Don't try border-radius here, becasue that's ugly with horizontal scrollbar (corner sticks out over round edge)
.markdown-content kbd,
.markdown-content pre,
.markdown-content samp {
    width: 100%;
    border: 1px solid olivedrab;
    padding: 8px;
    background-color: $baseBgColor;
}

.full-screen-img {
    cursor: pointer;
    margin: 12px;
    border: 3px solid $gray-700;
}

.img-in-editor {
    cursor: pointer;
    border: 1px solid $gray-700;
    vertical-align: top;
    border-radius: $border-radius;
}

.systemFileRow {
    margin-botom: 16px;
}

.systemFileActionLink {
    cursor: pointer;
    margin-right: 16px;
    border-bottom: 1px dotted gray;
}

.systemFile {
    font-family: Courier New, Courier, Roboto, Tahoma, Verdana, Arial;
    cursor: pointer;
    /* background: lightGray; */
    padding-bottom: 5px;
}

.specialAccountNodesPanel {
    border: 1px solid $nodeBorderBottomColor;
    border-radius: $border-radius;
    padding-left: $smallGap;
}

.vert-space {
    display: block;
    height: 0.5rem;
}

.mainTabPanel {
    //border: 1px solid black;
    //background-color: $mainContentBackground;
    //setting a max-width here ruins the centering horizontally on the page, my goal was
    //to narrow the main tab content in center of page
    //WARNING: I think the bootstrap 'main' entity is what is setting the width here and it didn't work to chagne it here.
    // max-width: 750px;

    //I'd prefer to have NO margin, but the top margin is getting forced so I'll add a bottom margin for consistency for now
    margin-bottom: $smallGap;
    //margin-top: 0px;
    width: 100%;
}

.searchResultsPanel {
    // padding: $smallGap;
    // margin: $smallGap;
}

.timelinePanel {
    // padding: $smallGap;
    // margin: $smallGap;
}

.parentNodeContentStyle {
    // border: 1px solid $gray-700;
    // border-radius: $border-radius;

    padding-right: 8px;
    padding-top: 8px;
    margin-bottom: 8px;
    margin-top: 8px;
}

.vertical-layout-row {
    margin-bottom: $smallGap;
}

.validationError {
    color: #E74C3C;
    margin-bottom: 0px;
}

.validationErrorBorder {
    border: 2px solid #E74C3C;
}

.txtFieldLabel {
    margin-right: .25rem;
    margin-top: 1rem;
}

.dialogTitle {
    font-size: 30px;
    margin-bottom: 20px;
}

.dialogSubTitle {
    font-size: 20px;
    margin-bottom: 20px;
}

.dialog-header {
    font-weight: bold;
    font-size: large;
    margin-top: $smallGap;
    margin-bottom: $smallGap;
}

.headerInfoDivExpanded {
    display: block;
    width: 100%;
}

.headerInfoDivCollapsed {
    display: inline-block;
}

.headerInfoButton {
    background-color: transparent;
    margin-right: $smallGap;
    margin-bottom: $smallGap;
}

.typeListIcon {
    margin-right: 12px;
    margin-top: 4px;
    vertical-align: "middle";
}

/* This positioning puts the plus buttion right outside the row to the right between rows
   so it's intuitive where the insert goes 
   
   NOTE: We could've also used a 'translatle()' css function to do this.
   */
.plusButtonFloatRight {
    position: absolute;
    top: -1.3rem;
    right: -3rem;
}

@keyframes fadeToHidden {
    // from {
    //     opacity: 1;
    // }

    to {
        opacity: 0;
    }
}

.compHidden {
    visibility: hidden;

    // animating the hiding part doesn't work well, because the effect gets interrupted by other parts of 
    // our animation flow, so we have to set to hidden instantly without animation.
    // animation-name: fadeToHidden;
    // animation-duration: .2s;
    // opacity: 0;

    margin-bottom: 20px;
}

/* Note: visibility is not allowed to be animated. This is a rule of CSS engines, not our own limitation. Also we don't set the 
'from' value becasue if it's already visibible 'opacity=1' we don't want to cause a screen flicker by setting invisible first for no reason.
*/
@keyframes fadeToVisible {
    from {
        opacity: hidden;
    }

    to {
        visibility: visible;
    }
}

.compVisible {
    visibility: visible;

    // this was an experiment, an may not even have been desirable
    // so for now we just set to visible instantly which is better
    // performance anyway, and may not be any less eye-strain
    // than I had thought this animation might solve.
    // animation-name: fadeToVisible;
    // animation-duration: 1s; <-------this didn't work. Comes back to visible instantly (no amination).
    margin-bottom: 20px;
}

.accountNode {
    margin: 8px 0 0 8px;
}

.systemNodeContent {
    border: 2px solid $nodeBorderBottomColor;
    border-radius: $border-radius;
    background-color: #17202A;
    margin: $tinyGap;
    padding: $tinyGap;
}

.content-narrow {
    max-width: 50rem;
}

.content-medium {
    max-width: 60rem;
}

.content-wide {
    max-width: 70rem;
}

.mousePointer {
    cursor: pointer;
}

.tags-content {
    margin-left: 1rem;
    /* we limit page width of text content, because text that goes to wide
		becomes difficult to read.
	*/
    border: 1px dotted lightGray;
    max-width: 800px;
    background: #f9e79f;
}

.property-table {
    margin-left: 1rem;
}

.prop-table-row {
    width: 100%;
}

.prop-table-name-col {
    width: 25%;
}

.prop-table-val-col {
    width: 70%;
}

.prop-table {
    width: 100%;
}

.folderIcon {
    color: darkkhaki;
}

.fileIcon {
    color: darkgreen;
}

.files-table {
    width: 100%;
    margin-top: $smallGap;
}

.files-table-row {
    width: 100%;
}

.files-table-type-col {
    width: 5%;
}

.files-table-size-col {
    width: 15%;
}

.files-table-delete-col {
    width: 5%;
}

.files-table-name-col {
    cursor: pointer;
    width: 75%;
}

.vertical-space {
    height: 16px;
    min-height: 16px;
}

.results-node {
    // why relative here ? todo-1
    position: relative;
}

.widthSizerPanel {
    margin-top: 8px;
    display: inline-block;
    background: $body-bg;
}

.widthSizerIcon {
    display: inline-block;
    margin-left: 10px;
    margin-right: 10px;
    cursor: pointer;
}

.showParentsIcon {
    cursor: pointer;
    color: gray;
}

.main {
    background-color: #eee;
}

.smallHeading {
    font-size: 1.3rem;
}

.form-control-dark {
    color: #fff;
    background-color: rgba(255, 255, 255, 0.1);
    border-color: rgba(255, 255, 255, 0.1);
}

.form-control-dark:focus {
    border-color: transparent;
    box-shadow: 0 0 0 3px rgba(255, 255, 255, 0.25);
}

.timeRemainingEditField {
    margin-left: 5px;
}

.border-top {
    border-top: 1px solid #e5e5e5;
}

.clearBoth {
    clear: both;
}

.border-bottom {
    border-bottom: 1px solid #e5e5e5;
}

.testHighlight {
    background-color: green;
}

.threadNodeDivider {
    width: 100%;
}

.threadFeedItem {
    margin-top: 8px;
    padding-top: 5px;
    border: 2px solid $nodeBorderBottomColor;
    padding-bottom: $smallGap;
    border-radius: $border-radius;
}

.threadFeedSubItem {
    padding-top: 5px;

    &:not(:last-child) {
        border-bottom: 2px solid $nodeBorderBottomColor;
    }

    &:last-child {
        margin-bottom: 16px;
    }

    border-left: 1px solid $nodeBorderBottomColor;
    margin-left: 4rem;
}

.threadFeedItemHighlight {
    margin-top: 5px;
    padding-top: 5px;
    border: 2px solid olivedrab;
    padding-bottom: $smallGap;
    border-radius: $border-radius;
}

.userFeedItem {
    padding-top: 5px;
    border-top: 2px solid $nodeBorderBottomColor;
    padding-bottom: $smallGap;
}

.userFeedItemHighlight {
    padding-top: 5px;
    border: 2px solid olivedrab;
    padding-bottom: $smallGap;
}

.userFeedParent {
    border: 2px solid $nodeBorderBottomColor;
}

.iconToggle {
    // padding: 2px;
    border-radius: 4px;
}

.iconToggleOn {
    @extend .iconToggle;
    border: 3px solid var(--bs-green);
    padding: 1px;
}

.iconToggleOff {
    @extend .iconToggle;
    border: 3px solid transparent;
}

.searchDlgOrderBy {
    width: 12rem;
}

.layoutSelection {
    max-width: 14rem;
    margin-right: 1rem;
}

.imagesSelection {
    max-width: 7rem;
    margin-right: $smallGap;
}

.selectLabel {
    margin-bottom: 3px;
    margin-right: 6px;
}

.binaryEditorSection {
    margin-left: 2px;
    margin-right: 2px;
    border: 1px solid $gray-700;
    border-radius: $border-radius;
    margin-bottom: $smallGap;
    margin-top: $tinyGap;
}

.binaryEditorItem {
    &:not(:last-child) {
        border-bottom: 1px solid $gray-700;
    }
}

.captchaImage {
    margin-left: 1px;
    margin-right: $smallGap;
    border: 2px solid $gray-700;
    border-radius: $border-radius;
}

.heading5 {
    font-size: 1.2rem;
    font-weight: 500;
    line-height: 1.2;
}

.friendListText {
    font-size: 1.2rem;
    font-weight: 500;
    margin-left: 12px;
}

.friendListImage {
    max-width: 60px;
    max-height: 60px;
    cursor: pointer;
    border: 1px solid gray;
    border-radius: $border-radius;
    margin: 4px;
}

.mobileRHSPanel {
    font-size: 140%;
}

.editorIcon {
    margin-left: $smallGap;
    cursor: pointer;
}

.largeFont {
    font-size: 140%;
}

.height-75vh {
    max-height: 70vh;
}

.vert-scroll {
    overflow: auto;
}

.ipfsPinnedCheckbox {
    margin-left: 24px;
}

.durationTypeInput {
    max-width: 8rem;
}

//We use the default player except we have our own big play and pause buttons.

audio::-webkit-media-controls-mute-button {
    display: none !important;
}

audio::-webkit-media-controls-play-button {
    display: none !important;
}

// NOTE: The way to center an element inside another element is user "text-align: center" on the parent 
// element and then "display: inline-block" on the element to be centered in the parent.
.playerButtonsContainer {
    text-align: center;
    margin-top: 20px;
}

.playerButton {
    cursor: pointer;
    display: inline-block;
    padding: 12px;
    border: 6px solid lightGray;
    border-radius: $border-radius;
}

.headingBar {
    margin-top: 12px;
    margin-bottom: 8px;
    border-bottom: 6px solid $nodeBorderBottomColor;
}

.tabTitle {
    display: inline-block;
    font-size: 1.5rem;
    font-weight: bold;
    vertical-align: middle;
    color: var(--bs-green);
    margin-bottom: 6px;
}

.monospace {
    font-family: Courier New, Courier, Lucida Sans Typewriter, Lucida Typewriter, monospace;
}

.rowHeaderSharingNames {
    margin-left: 6px;
}

.editDlgSharingNames {
    padding: 3px 4px 3px 4px;
    cursor: pointer;
}

.iconMarginRight {
    margin-right: 12px;
    vertical-align: "middle";
}

.iconMarginLeft {
    margin-left: 12px;
    vertical-align: "middle";
}

.tableRow {
    display: table-row;
}

.profileInfoButton {
    display: inline-block;
    margin-top: $smallGap;
    font-weight: bold;
    margin-left: 15px;
    padding: 8px;
    border: 2px solid $nodeBorderBottomColor;
    border-radius: 100px;
    cursor: pointer;
}

.followingText {
    @extend .profileInfoButton;
    background-color: green;
}

.blockingText {
    @extend .profileInfoButton;
    background-color: orangered;
}

.followCount {
    @extend .profileInfoButton;
}

.displayTable {
    display: table;
    border-spacing: 10px;
}

.horizontalLayoutComp {
    display: table;
    border-spacing: 10px;
    margin-top: $smallGap;
    margin-bottom: $smallGap;
}

.horizontalLayoutCompCompact {
    display: table;
    border-spacing: 10px;
}

.horizontalLayoutCompBorderCollapse {
    @extend .horizontalLayoutComp;

    border-collapse: collapse;
}

.displayTableNoSpacing {
    display: table;
}

.displayRow {
    display: table-row;
}

.displayCell {
    display: table-cell;
    vertical-align: top;
}

.clickable {
    cursor: pointer;
}

.userInfo {
    cursor: pointer;
    width: 100%;
}

.textField {
    margin-top: $smallGap;
    margin-top: 4px;
}

.stickyNote {
    margin-top: 6px;
    color: darkkhaki;
}

.warningIcon {
    color: darkkhaki;
}

.activeLikeIcon {
    color: yellow;
    border: 2px solid yellow;
    padding: 4px;
    border-radius: 8px;
}

.rhsLink {
    margin-top: 25px;
    margin-right: 55px;
    cursor: pointer;
}

.floatRightHeaderDiv {
    margin-bottom: 6px;
    margin-left: 10px;
    margin-right: 8px;
}

.welcomeText {
    max-width: 30rem;
    display: inline-block;
}

.supportText {
    font-size: 80%;
    font-style: italic;
}

.nodeHistoryPanel {
    margin: $smallGap;
}

.lockFont {
    font-size: 90%;
}

.nodeHistoryItem {
    cursor: pointer;
    // anything 'draggable' needs a 2px border
    border: 2px solid transparent;
}

.nodeHistorySubItem {
    margin-left: 30px;
    cursor: pointer;
    // anything 'draggable' needs a 2px border
    border: 2px solid transparent;
}

.nodeHistorySubItemDots {
    margin-left: 20px;
    margin-top: 5px;
}

.ipsmFeedItem {
    font-family: 'Courier New', Courier, monospace;
    border-bottom: 1px solid gray;
}

.dateField {
    font-family: "monospace";
}

.timeField {
    font-family: "monospace";
}

.textField {
    font-family: "monospace";
}