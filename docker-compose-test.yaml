version: '3.7'
services:

    mongo-test: 
        container_name: mongo-test 
        # WARNING: volumes will not handle '~' character for home folder. Do not use.
        volumes:
            - "${DEPLOY_TARGET}/data:/data/db"
            - "${DEPLOY_TARGET}/dumps:/mongo-dumps"
            - "${DEPLOY_TARGET}/mongod.conf:/etc/mongod.conf"
        command: mongod --config /etc/mongod.conf
        ports:
            - "27017:27017"
        env_file:
            - "../secrets/mongo.env"
        networks:
            - net-test
        # Always specify version of mongo. When it upgrades automatically there can be database issues that need to be resolved
        # and we don't want that happening unexpectedly
        image: mongo:4.0

    # ipfs-test: 
    #     container_name: ipfs-test 
    #     environment:
    #         # IPFS_PROFILE options (lowpower | server)
    #         routing: "dhtclient" 
    #         IPFS_PROFILE: "lowpower"
    #         IPFS_PATH: "/data/ipfs"
    #         # LIBP2P_FORCE_PNET: 1
    #     # expose:
    #     #    # do we need 4001. it's for swarm right?
    #     #     - '4101'
    #     #     - '8080'
    #     #     - '5002'
    #     # WARNING: volumes will not handle '~' character for home folder. Do not use.
    #     volumes:
    #         - '${ipfs_staging}:/export'
    #         - '${ipfs_data}:/data/ipfs'
    #     # ports:
    #     #    - "4101:4001"
    #     #    - "8080:8080"
    #     #    - "5002:5001"
    #     networks:
    #         - net-test
    #     image: ipfs/go-ipfs:v0.7.0

    quanta-test:
        build: 
            context: .
            dockerfile: dockerfile-test
        container_name: quanta-test
        expose:
            - "8181"
            # Uncomment for debugging...
            #- '8000'
        # WARNING: volumes will not handle '~' character for home folder. Do not use.
        volumes:
            - "${DEPLOY_TARGET}/tmp:/tmp"
            - "${DEPLOY_TARGET}/log:/log"

             # This maps '/app' to be the current folder where you run docker from (where the yaml file is normally)
            - $PWD:/app
        ports:
            - "8181:8181"
            # Uncomment for debugging...
            #- '8000:8000'
        networks:
            - net-test
        environment:
            brandingAppName: Quanta
            brandingMetaContent: "Quanta: Social Media Micro-blogging Platform for the Fediverse!"
            introSubtitle: Welcome to the Fediverse!
            intro1: Quanta is a decentralized and federated content management, social media, and publishing platform. Join the Fediverse Revolution!
            intro2:
            mongoAdminPassword: "${subnodePassword}"
            reCaptcha3SiteKey: "${reCaptcha3SiteKey}"
            reCaptcha3SecretKey: "${reCaptcha3SecretKey}" 
            mongoSecurity: "true"

            # NOTE: '>-' removes all newline characters and makes one long string
            testUserAccounts: >- 
                adam:${testPassword}:${devEmail},
                bob:${testPassword}:${devEmail},
                cory:${testPassword}:${devEmail},
                dan:${testPassword}:${devEmail}

            spring.config.location: "classpath:/application.properties" 
            mongodb.host: "mongo-test" 
            mongodb.port: "27017"
            profileName: "prod" 
            server.port: "8181" 
            httpProtocol: "http" 
            metaHost: "localhost" 
            reSaveAll: "false"
            forceIndexRebuild: "false"
            allowFileSystemSearch: "false" 
            spring.http.multipart.max-file-size: "200MB" 
            spring.http.multipart.max-request-size: "200MB" 
            spring.servlet.multipart.max-file-size: "200MB"
            spring.servlet.multipart.max-request-size: "200MB"
            adminDataFolder: "/tmp" 

            # Uncomment for debugging... (don't forget to open ufw firewall for port on server)
            #JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,address=0.0.0.0:8000,server=y,suspend=n"
            
            ipfs.host: "http://ipfs-test"
            ipfs.apiPort: "5001"
            ipfs.gatewayPort: "8080"
            
        image: quanta-test
        depends_on:
            - mongo-test
            # - ipfs-test

# https://docs.docker.com/compose/networking/

networks:
  net-test:
    driver: bridge
    external: false
    name: net-test

# To force compose to use an externally pre-created network outside this compose file you can do this
# networks:
#   default:
#     external:
#       name: my-pre-existing-network
